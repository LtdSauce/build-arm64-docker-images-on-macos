name: Docker Automated Builds
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.build.OS }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - {PLATFORM: linux/amd64, OS: ubuntu-22.04}
          - {PLATFORM: linux/arm64, OS: macos-14}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        run: |
          platform=${{ matrix.build.PLATFORM }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository_owner }}
      - name: Install and start Colima
        if: runner.os == 'macos'
        run: |
          brew install docker
          brew install colima
          colima version
          colima start --cpu 3 --memory 6 --disk 100 --vm-type=qemu --mount-type=sshfs --dns=1.1.1.1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: ${{ matrix.build.PLATFORM }}
          builder: ${{ steps.buildx.outputs.name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          sbom: true
          provenance: true
      - name: Export digest
        run: |
          digest="${{ steps.build.outputs.digest }}"
          mkdir -p /tmp/digests
          touch "/tmp/digests/${digest#sha256:}"
          cat "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    name: Merge
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository_owner }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest
            type=semver,pattern={{version}}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        shell: bash
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf "ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}@sha256:%s " *)
      - name: Inspect image
        shell: bash
        run: |
          docker buildx imagetools inspect "ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:${{ steps.meta.outputs.version }}"
      - name: Scan the image
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}
